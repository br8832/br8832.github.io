{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bryan\\\\portfolio\\\\src\\\\SlideShow.js\";\nimport React from 'react';\nimport { Slide } from 'react-slideshow-image'; // takes an array of information\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SlideShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.projects = [{\n      name: \"Cookflex\",\n      path: \"%PUBLIC_URL%/portfolio/public/logo192.png\",\n      repository: \"https://github.com/Dund0/FoodApp\",\n      date: \"JANUARY 2020 - MAY 2021 \",\n      description: \"Created a mobile app for Android in Android Studio. I worked on the backend with Firebase, a service by Google for mobile and web applications, to manage users and their data, like images and emails. \"\n    }, {\n      name: \"Speech-to-Text Bot\",\n      path: \"/public/text-to-speech.png\",\n      repository: \"https://github.com/CSUN-ACM/Speech-To-Text\",\n      date: \"JANUARY 2020 - MAY 2021 \",\n      description: \"Utilizing Python and its various libraries, we created a bot for converting a person's speech to text. I helped in creating the model for the bot and then testing it with PyAudio \"\n    }, {\n      name: \"Quiz App\",\n      path: \"/public/quiz.jpg\",\n      repository: \"https://github.com/br8832/COMP484\",\n      date: \"JANUARY 2021 - MAY 2021\",\n      description: \"Create a quiz game in meteor. I created the backend for interfacing with some API's and designed the look of our quiz game. Then, with the meteor tools, I hosted it for a short while. I enjoyed worked on the backend more with the various API's and documentation\"\n    }, {\n      name: \"This website\",\n      path: \"/public/logo192.png\",\n      repository: \"https://github.com/br8832/portfolio\",\n      date: \"MARCH 2022 - APRIL2022\",\n      description: \"Recreated a resume site from a class but using React. The purpose of which is to understand React better, more specifically front-end development, and update continuously my experience.\"\n    }];\n    this.properties = {\n      indicators: true,\n      autoplay: true,\n      canSwipe: true,\n      arrows: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"slideshow\",\n      children: /*#__PURE__*/_jsxDEV(Slide, { ...this.properties,\n        children: this.projects.map(project => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slide-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 87\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              href: project.repository,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"The repository\",\n                src: project.path\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 79\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: project.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 59\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SlideShow;","map":{"version":3,"sources":["C:/Users/bryan/portfolio/src/SlideShow.js"],"names":["React","Slide","SlideShow","Component","constructor","props","projects","name","path","repository","date","description","properties","indicators","autoplay","canSwipe","arrows","render","map","project"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,uBAAtB,C,CAEA;;;;AACA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgB,CACZ;AAACC,MAAAA,IAAI,EAAC,UAAN;AAAkBC,MAAAA,IAAI,EAAE,2CAAxB;AAAqEC,MAAAA,UAAU,EAAE,kCAAjF;AAAqHC,MAAAA,IAAI,EAAC,0BAA1H;AAAsJC,MAAAA,WAAW,EAAE;AAAnK,KADY,EAEZ;AAACJ,MAAAA,IAAI,EAAC,oBAAN;AAA4BC,MAAAA,IAAI,EAAE,4BAAlC;AAAgEC,MAAAA,UAAU,EAAE,4CAA5E;AAA0HC,MAAAA,IAAI,EAAC,0BAA/H;AAA2JC,MAAAA,WAAW,EAAE;AAAxK,KAFY,EAGZ;AAACJ,MAAAA,IAAI,EAAC,UAAN;AAAkBC,MAAAA,IAAI,EAAE,kBAAxB;AAA4CC,MAAAA,UAAU,EAAE,mCAAxD;AAA6FC,MAAAA,IAAI,EAAC,yBAAlG;AAA6HC,MAAAA,WAAW,EAAE;AAA1I,KAHY,EAIZ;AAACJ,MAAAA,IAAI,EAAC,cAAN;AAAsBC,MAAAA,IAAI,EAAE,qBAA5B;AAAmDC,MAAAA,UAAU,EAAE,qCAA/D;AAAsGC,MAAAA,IAAI,EAAC,wBAA3G;AAAqIC,MAAAA,WAAW,EAAE;AAAlJ,KAJY,CAAhB;AAMA,SAAKC,UAAL,GAAkB;AACdC,MAAAA,UAAU,EAAE,IADE;AAEdC,MAAAA,QAAQ,EAAE,IAFI;AAGdC,MAAAA,QAAQ,EAAE,IAHI;AAIdC,MAAAA,MAAM,EAAE;AAJM,KAAlB;AAMH;;AACDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA,6BACA,QAAC,KAAD,OAAW,KAAKL,UAAhB;AAAA,kBACK,KAAKN,QAAL,CAAcY,GAAd,CAAoBC,OAAD,IAAa;AAAE,8BAAO;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,oCAA4B;AAAA,wBAAKA,OAAO,CAACZ;AAAb;AAAA;AAAA;AAAA;AAAA,oBAA5B,eAC1C;AAAG,cAAA,MAAM,EAAC,QAAV;AAAmB,cAAA,GAAG,EAAC,YAAvB;AAAoC,cAAA,IAAI,EAAEY,OAAO,CAACV,UAAlD;AAAA,qCAA8D;AAAK,gBAAA,GAAG,EAAC,gBAAT;AAA0B,gBAAA,GAAG,EAAEU,OAAO,CAACX;AAAvC;AAAA;AAAA;AAAA;AAAA;AAA9D;AAAA;AAAA;AAAA;AAAA,oBAD0C,eAE1C;AAAA,wBAAKW,OAAO,CAACT;AAAb;AAAA;AAAA;AAAA;AAAA,oBAF0C,eAG1C;AAAA,wBAAIS,OAAO,CAACR;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAH0C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAGA,SAHlC;AADL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA3BkC;;AA6BvC,eAAeT,SAAf","sourcesContent":["import React from 'react'\r\nimport { Slide } from 'react-slideshow-image';\r\n\r\n// takes an array of information\r\nclass SlideShow extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.projects = [\r\n            {name:\"Cookflex\", path: \"%PUBLIC_URL%/portfolio/public/logo192.png\", repository: \"https://github.com/Dund0/FoodApp\", date:\"JANUARY 2020 - MAY 2021 \", description: \"Created a mobile app for Android in Android Studio. I worked on the backend with Firebase, a service by Google for mobile and web applications, to manage users and their data, like images and emails. \"},\r\n            {name:\"Speech-to-Text Bot\", path: \"/public/text-to-speech.png\", repository: \"https://github.com/CSUN-ACM/Speech-To-Text\", date:\"JANUARY 2020 - MAY 2021 \", description: \"Utilizing Python and its various libraries, we created a bot for converting a person's speech to text. I helped in creating the model for the bot and then testing it with PyAudio \"},\r\n            {name:\"Quiz App\", path: \"/public/quiz.jpg\", repository: \"https://github.com/br8832/COMP484\", date:\"JANUARY 2021 - MAY 2021\", description: \"Create a quiz game in meteor. I created the backend for interfacing with some API's and designed the look of our quiz game. Then, with the meteor tools, I hosted it for a short while. I enjoyed worked on the backend more with the various API's and documentation\"},\r\n            {name:\"This website\", path: \"/public/logo192.png\", repository: \"https://github.com/br8832/portfolio\", date:\"MARCH 2022 - APRIL2022\", description: \"Recreated a resume site from a class but using React. The purpose of which is to understand React better, more specifically front-end development, and update continuously my experience.\"}\r\n        ]\r\n        this.properties = {\r\n            indicators: true,\r\n            autoplay: true,\r\n            canSwipe: true,\r\n            arrows: true,\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <section className='slideshow'>\r\n            <Slide {...this.properties}>\r\n                {this.projects.map( (project) => { return <div className='slide-item'><h2>{project.name}</h2>\r\n                <a target=\"_blank\" rel=\"noreferrer\" href={project.repository}><img alt=\"The repository\" src={project.path}></img></a>\r\n                <h3>{project.date}</h3>\r\n                <p>{project.description}</p></div>})}\r\n            </Slide>\r\n            </section>\r\n        )\r\n    }\r\n}\r\nexport default SlideShow"]},"metadata":{},"sourceType":"module"}